// Code generated by go-bindata.
// sources:
// assets/assets.go
// assets/images/colored_tilemap.png
// assets/images/colored_tilemap_packed.png
// assets/images/tile_0001.png
// assets/images/tile_0004.png
// assets/images/tile_0005.png
// assets/images/tile_0006.png
// assets/images/tile_0007.png
// assets/images/tile_0008.png
// assets/images/tile_0009.png
// assets/images/tile_0014.png
// assets/images/tile_0016.png
// assets/images/tile_0024.png
// assets/images/tile_0039.png
// assets/images/tile_0057.png
// assets/images/tile_0081.png
// assets/maps/tileset.tsx
// assets/maps/world.tmx
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsAssetsGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func assetsAssetsGoBytes() ([]byte, error) {
	return bindataRead(
		_assetsAssetsGo,
		"assets/assets.go",
	)
}

func assetsAssetsGo() (*asset, error) {
	bytes, err := assetsAssetsGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/assets.go", size: 0, mode: os.FileMode(420), modTime: time.Unix(1588792175, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesColored_tilemapPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x58\x07\xa7\xf8\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x59\x00\x00\x00\x59\x08\x03\x00\x00\x00\x62\xd5\x78\x9d\x00\x00\x00\x04\x67\x41\x4d\x41\x00\x00\xb1\x8f\x0b\xfc\x61\x05\x00\x00\x00\x36\x50\x4c\x54\x45\xff\xff\xeb\x3d\x6e\x70\xff\x91\x66\xff\xb5\xb5\xff\xb5\x70\x43\x43\x4f\xff\xe4\x78\x3c\xa3\x70\xeb\x56\x4b\x5d\xde\x87\x8c\x3f\x5d\xf2\xa6\x5e\x60\x60\x70\xba\x61\x56\x7e\x7e\x8f\xc2\xc2\xd1\x3a\x3c\x3c\x22\x23\x23\x0f\x20\x8e\x44\x00\x00\x06\xcd\x49\x44\x41\x54\x58\xc3\xc5\x99\x8b\x96\xa3\x36\x0c\x86\xd9\x49\x26\x80\xc1\x17\xbd\xff\xcb\x56\xbf\x24\xdb\x02\x4c\x26\xed\xe9\xb4\x6c\x26\x47\xcb\xe5\xb3\x90\x75\xb3\x33\x51\xd6\xa3\xe4\x3b\x81\x0a\x11\x3d\x9f\xfc\xd5\x05\xfe\x96\x0f\xce\xc4\x68\x97\xf8\x56\x15\xd6\x95\xbf\xa6\x9c\x7e\x20\xa7\x3c\x22\xab\x00\x72\x7c\x3e\xe3\x98\x9c\x13\x91\x9d\x19\x09\x3c\x70\x61\xb5\xf8\xf1\xc8\x67\x32\x0b\x78\x8b\xe7\x73\x96\x0f\xdf\x13\x9e\xcf\x80\x9b\x53\x4e\xfc\x61\x21\xc4\x79\x8e\x01\x64\x4a\x38\x4a\xb2\x83\x05\x51\xd5\xce\xb0\x26\x25\xda\x51\x32\xe5\xc0\x0f\xf0\x58\xcf\x79\x5d\xe7\x27\x73\x9e\x31\x84\xc8\x42\x82\x0e\xfc\x55\x82\xde\x1b\x46\x64\xbc\x14\x65\x4f\x66\x3d\x58\x8b\xc8\x9c\xcc\x68\x00\xf9\x8d\xf1\xce\x9d\x9c\xd5\x1a\xb9\xac\x04\x30\xad\x03\x72\x56\x63\xe4\x4e\x7e\xea\xcd\x62\x55\x08\xe4\x85\xc0\x07\x81\x2c\x3a\x83\x2c\x67\x84\xbc\xef\x29\xed\x05\x5f\x22\x34\xb2\x9c\x01\x99\x1f\x97\xcf\x58\x50\x32\x3f\x20\x9f\x36\xa8\x92\xf9\x28\xbb\x1d\x8e\x8c\xe3\x8e\x1c\xe5\x33\x24\xeb\x3d\x53\xf9\xad\x63\xca\xf9\xec\x6c\xe6\xe0\xc9\xce\x40\x67\x76\x84\x75\xc6\x3d\x01\xda\xe8\xcd\x0f\x3e\x86\xbe\x9a\x31\x95\x99\x06\xe4\x66\x8d\x46\x9e\xa7\x75\x02\x1a\x8e\x1d\xf1\xaa\x7c\xe9\x81\x6b\x0f\x3e\x83\x18\x8c\x3d\x40\xd8\xfd\xc4\x49\xd2\x90\xcc\x17\xd3\x81\x0c\x0f\xe3\x4f\x61\x93\x22\x94\x63\xbd\xf9\x01\xab\xc2\x21\xf1\xf8\xac\xef\x55\x43\x78\xac\xb3\x7a\x66\xb7\x86\x28\xc4\x3a\x33\x44\xc9\x32\x5b\xc9\x07\x51\xf7\x70\xe4\x8b\x74\x67\x8d\x13\x19\xda\x30\x78\x15\x6b\x40\x6d\x51\x0c\xb9\xcc\xeb\x5c\xc9\xea\xd8\xf4\x91\x35\xc4\x80\xd4\xc9\x81\xb3\x44\x32\x72\xb3\x33\x4c\x26\x73\x61\xa9\xe9\xb3\x19\x84\xce\xfc\x27\x64\x79\xf7\x87\xaa\x8c\xc0\x97\x23\x96\x55\xc9\xab\x91\x13\x7d\xea\x75\xb3\xe9\x13\xa9\xcd\x20\xde\x8c\xc7\x42\x5c\xc4\x83\x35\x90\x74\x7e\x39\x52\x7e\xaa\x29\xac\x73\x2b\x2e\x4d\x50\xdd\x0f\xa9\x49\x27\xae\xbd\xfb\xd4\xab\x55\xd2\x44\xdf\xed\xdc\xaa\x55\x3f\xd3\xa6\xa0\x91\x9b\xa0\x8f\xbb\x19\x4c\x3d\x3c\xeb\xa0\x3b\x78\x7b\x1b\x1d\x79\x55\xd2\xce\x81\x1c\xc4\xb7\x87\x64\x71\x2d\x26\xb7\x84\xaf\xc9\x2a\x95\x5d\x33\xff\xee\x33\xb6\xbc\xf2\x48\xe7\xb0\xe1\xd2\x16\xbc\x62\xd0\x79\x1f\x91\x8f\x99\xff\x8e\x6c\x3a\x33\x95\x0f\xc4\xe0\x8e\x2b\x78\x53\xce\xbc\xf8\x9b\xf6\x4e\xb6\x42\x76\x26\xef\x42\xa6\xb1\xce\xea\xdf\x1b\xc8\x72\x2f\x35\x61\x6a\xa5\x64\xd7\xa7\x98\xf3\x4d\xf8\x97\x7d\x95\x69\x3a\xe3\x8a\xd7\xb9\xd6\x53\x47\x96\xea\x07\xdf\xa8\xa5\xc4\xd5\x14\x41\xe7\x7a\x86\x0e\xd6\xd0\x41\xfb\xc4\x05\x39\x00\x84\x12\xde\xeb\x7e\x2f\x52\x5a\x08\x9f\xc3\xbc\x59\xf5\x52\x38\x72\xbe\x6b\x7b\x48\x5b\x1a\xe4\x06\x9a\xee\x38\x7e\xac\x6f\x3b\x2c\x0a\x94\x8c\xba\xea\xed\xdc\xd2\x4e\x88\x29\xc5\x90\x8c\x9c\xaa\xab\x0f\xc9\xfc\xa7\xe4\x9c\x2b\x59\x88\x81\x7c\xe6\xaf\xa9\x32\xc6\x8c\xbf\x4a\x46\x27\x73\x4b\xd6\x4b\x8d\x9c\x52\x4d\xa7\x47\xb2\x36\xa5\x7f\x97\x2c\x57\x8b\x60\xe5\x9e\x01\xd9\x52\x53\x92\x82\x94\xab\x35\x76\x26\xef\x3f\x90\xdb\xe8\xd0\xb9\x5a\xc3\xd9\xd9\xc8\x19\xdf\x5d\xe7\xf7\x64\x55\x35\x49\x2d\xd0\x80\x6d\x33\xa8\xfd\x87\xf8\xb3\x9d\xc9\x3a\x68\x25\x53\x8b\xc1\x1b\x9d\xd5\xbc\x2d\x93\xf4\x56\xbf\x27\x6a\x6b\xcc\x6a\x49\xfa\xbf\x6b\xca\xdb\x90\x49\xd2\xab\x8b\x91\x49\xaa\xa7\xb6\x8e\x9f\x91\xbf\x91\x2f\x00\xe4\x56\x89\xfe\x54\xb2\x2d\x61\x38\xde\xa2\x34\x5d\x60\xa3\x36\x65\xb9\x34\xa1\x7a\x74\x35\xf6\xa1\x86\x92\xe0\xf4\xcc\xda\x2f\x01\x21\x64\x49\xb0\x50\xd3\xfa\x5e\x29\x71\xe7\x75\x0a\x5e\xd0\x2d\x58\xea\x7c\x7d\xb7\xb1\x66\x13\x76\x01\xeb\x10\x91\x44\x79\xae\x69\x3a\x95\x6f\xc8\x58\xff\xd4\x33\xbd\xf1\xf8\x56\x0e\x0c\x52\xe4\xed\x4c\xf9\x48\x76\x4f\x36\x27\xb1\xfc\xfc\x91\xce\x0a\xfe\x56\x41\xda\x95\x10\x76\x7b\x8b\x40\x4d\xc8\xd2\xe4\xb8\x8e\xd1\xad\x53\x40\x86\xc0\xd7\xf6\x2e\x08\x57\x75\xfe\x23\x06\xe1\xd0\x0b\x52\xf8\x2c\x52\xaa\x63\x67\x21\xf7\xce\xdc\xd5\x14\x21\x5f\xaa\xcc\x75\x4e\xf7\x0a\x8c\xc7\x4b\x29\xf6\x7e\xe3\x57\xd7\x29\xce\x7b\xe9\x2e\x52\x74\xa5\xe0\x05\xb1\xf8\x25\x76\x7a\x02\x19\x90\x69\xb0\x57\xd0\xfa\x4c\x5b\x32\xa8\x5f\x37\xf2\xeb\x10\x95\xe1\xf1\x08\xd7\xfe\x19\xbe\x71\xb2\x6a\xf2\x5d\x77\x1d\x62\x15\xf5\xd7\x62\xe0\x97\xb9\x1f\x1d\x75\xfe\xc0\xeb\x66\x3e\x04\x28\x07\x15\xe1\x57\xf2\xcb\x74\xae\x1b\x1d\x5f\xf2\xf9\x81\x2c\x31\xe3\x55\xf5\x64\x1e\xad\xd0\xeb\xf5\x65\x5e\x87\xe6\x06\xc2\x4b\x47\x1b\x90\xf7\x93\xce\xec\x75\xb3\x1c\xd4\x95\x97\x6f\xf6\xec\xf2\x22\x25\x15\xad\x28\x27\xf2\x25\x52\x38\x4b\xa5\x53\xa4\x58\x05\x69\xc2\x5c\x13\xfe\x97\x91\x75\x89\x25\xf7\xe8\x68\x83\x48\x39\xf7\x63\x07\x1b\x1e\x4a\x49\xe5\x68\x30\xb6\x30\x67\x0b\xfd\x6e\xa4\xf4\x95\x94\x75\x4d\x6e\x31\xf2\xa6\xc5\xba\x2c\xc4\x2e\xc2\xd4\xbb\xe5\xbe\x76\x70\xeb\xc1\x4d\x97\xff\xba\xae\x1d\x08\xd7\x25\x4c\x15\xa6\x6b\x3f\x7f\x24\x6f\x7e\xbd\x9c\x97\xc5\x09\xfc\xe7\x9f\x92\x66\x44\x05\x38\xd9\x5b\xf2\xb6\x2d\xbc\x54\xf0\x8a\x2d\xcb\xd2\x84\xe5\x5f\x20\x53\xae\xd9\x26\x83\x6c\x02\x83\xe9\x9f\x92\xab\x35\xdc\x1e\x51\x5e\x9a\xb0\x64\x3a\x90\xf7\xd4\x04\xee\xb7\xf2\x60\x06\x0f\xeb\xee\xed\xbc\xe7\x79\x16\xfa\xeb\x9c\x84\x91\xd7\x69\x50\x7f\xe6\x75\xb5\x52\x5f\x85\x5f\x5f\xa7\xdc\x29\xb6\x6d\x7e\xe9\x21\x79\x23\x5a\x77\xda\x96\x15\xe7\x5d\xe2\xbe\x4e\xc1\x22\xf4\x9e\xbc\xb9\x66\x5b\xf6\xfd\xb4\xfd\x4e\xad\xef\x6d\xbb\x3d\xcd\xf2\x38\xc3\x76\x96\x39\xa2\x6d\x29\x9b\x1d\x22\xc0\x6b\x8b\x3a\xdd\x26\xbb\x46\xa4\x7b\x3b\x58\xfb\xc5\x48\xbe\x44\xd6\x5d\x88\x2c\x3b\xd9\xb2\x93\xcc\xf7\x28\x99\xff\x7f\x26\x03\x5d\xc9\x5b\x27\x33\x37\x43\xa5\x9a\x0f\x25\xc5\x61\x6b\x49\xb3\x4d\xfa\x84\xbc\x9d\xc8\xaa\x21\xc0\x40\x3b\xff\xa9\xcb\x0a\x67\x8d\x4e\x1e\x58\xc3\x93\x9d\x9d\x83\x34\x7c\x59\xf6\xbe\xd0\xbf\x61\x6f\x10\xab\x92\x10\x46\x76\x1e\xcc\x60\x3f\x63\x42\x4f\xb0\x00\xe6\xbe\x3d\x32\x22\x13\xd6\x6c\x44\x43\xaf\xf3\x64\xbb\x64\x8b\xb5\xaa\x6a\xdd\xc4\x28\xa4\xe4\x41\x78\xfe\x27\x91\x32\x4b\xa5\xa7\x42\x5b\xd3\x79\x93\x8f\x95\xe3\xfe\x5e\xcb\x20\xba\x31\x93\xc1\x2f\xc0\x27\x32\xed\xcb\xac\xad\xf1\x5c\x36\xd4\x5e\x49\x9e\xcc\x50\xc7\xd6\x69\x36\x32\x7b\x24\x0b\xb8\xb0\x38\x43\x45\xed\x9f\x25\x2a\xb7\x4a\x4e\xb6\x67\x25\x3d\xdb\x5a\xe4\xfc\xeb\xc5\x4e\xa2\xf5\x7d\x6b\x2d\x84\x90\x17\x19\x74\x81\xe0\x43\x4f\xf7\x1a\x4d\xe7\x4d\xba\x2f\x1e\xe9\xb5\x61\x2c\xe6\xce\x2b\xd5\x56\x8d\xc9\xfc\x38\xd7\xf7\xa5\xaa\x8a\x21\x98\xf7\x5a\x6c\x72\x4d\xb0\x2d\x2f\xd9\x3d\xb6\xa5\xbd\xe9\x9c\x71\x93\xfc\x5a\x01\x72\x6d\x2f\xaf\x64\xd5\x59\xc0\x2a\x1c\x93\x55\xa4\xaa\x73\x80\xbd\x82\xb3\xc6\x5a\x3b\xd8\x81\x35\x4c\x0d\xa9\x5f\xd5\x33\x17\xb5\x73\x2d\x5b\xbd\xf9\x8f\xb0\x53\x3c\xce\x20\x5a\xd7\xd1\x0c\x6a\xbb\x09\x61\xa9\x53\xa9\x13\x38\x24\xdb\x1a\xdf\x7b\x9d\x6d\xb9\x0f\xbc\xae\xea\xbc\x0c\xc2\xca\xd9\xb9\x2e\xb2\x24\xaf\xfe\x6a\xa4\xa4\xcb\x6f\x6d\x07\xe1\x90\x37\x4e\xc2\xf8\xa9\x5a\x53\x7e\xfc\xe5\xf1\x58\xad\xfc\xd6\xd9\xf1\x66\x24\x6c\xf7\xd4\x90\xac\xab\xe2\xcf\xc8\x6d\xd7\x5a\xf7\x96\x2f\xe4\x9b\x5f\x1e\xef\xc9\x74\xde\xa7\x3d\xed\x2d\x53\x23\x1f\x7f\x78\xb2\x9e\xe4\x0d\xb9\x6f\x94\x59\xfb\x74\xfa\x45\x63\xa8\xb3\xdb\x25\xbe\x27\xef\x3f\xec\x5a\xef\x8d\x3c\xfe\xe5\xf1\x1d\xb9\xee\x2d\x8b\x35\x2e\x7b\xcb\x07\xf2\xf5\x97\xc7\x3b\x67\x93\xfd\x0d\x5b\xcb\xb4\x5d\xeb\xe3\xde\x32\xd1\x5f\x99\x0c\xd1\x1d\x43\x68\x5b\x61\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xc7\xb4\xdb\xfb\x58\x07\x00\x00")

func assetsImagesColored_tilemapPngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesColored_tilemapPng,
		"assets/images/colored_tilemap.png",
	)
}

func assetsImagesColored_tilemapPng() (*asset, error) {
	bytes, err := assetsImagesColored_tilemapPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/colored_tilemap.png", size: 1880, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesColored_tilemap_packedPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x6b\x06\x94\xf9\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x50\x00\x00\x00\x50\x08\x03\x00\x00\x00\xb9\xcf\x02\x9f\x00\x00\x00\x04\x67\x41\x4d\x41\x00\x00\xb1\x8f\x0b\xfc\x61\x05\x00\x00\x00\x33\x50\x4c\x54\x45\xff\xff\xeb\x3d\x6e\x70\xff\x91\x66\xff\xb5\xb5\xff\xb5\x70\x43\x43\x4f\xff\xe4\x78\x3c\xa3\x70\xeb\x56\x4b\x5d\xde\x87\x8c\x3f\x5d\xf2\xa6\x5e\x60\x60\x70\xba\x61\x56\x7e\x7e\x8f\xc2\xc2\xd1\x22\x23\x23\x4c\x28\x09\x28\x00\x00\x05\xe3\x49\x44\x41\x54\x58\xc3\xa5\x98\x8b\x9a\xeb\x2a\x08\x46\xb3\xa7\x99\x5c\x34\x2a\xef\xff\xb4\x07\x7e\xc0\x4b\x4c\xdb\xbd\xbf\xe3\xb4\x71\x92\x9a\x25\x08\x22\xba\x50\xf9\x58\x88\xcb\xba\x12\xd5\x9a\x2f\xfa\x21\x4a\x49\x9f\x6b\x2b\xa2\xf3\xe4\xcb\x52\xf2\x27\x5e\x2e\x13\x50\x6b\xfe\xa4\x75\x4d\x4f\xc0\x92\xe9\x6d\xe1\xce\x58\x0e\x7e\x91\xdf\x2c\x5c\xf3\xed\xba\xee\xf8\x10\x85\x75\x0d\x68\x93\xb3\x30\x42\xda\xf7\x14\x04\x48\x79\x2c\x90\x4c\x0b\x77\x9e\xac\x14\x2a\x81\xdb\x32\x71\x3f\xcf\x5d\x64\x4c\x21\xa4\x95\xb2\xf4\xca\x97\xa0\xcd\xc2\x0c\x84\xfc\xa5\x01\xb9\x6b\xee\x38\x11\x8b\x17\xca\x0a\xcd\xa0\x9b\x01\x8b\xaa\x5c\x4e\x12\x1e\x9d\x13\xd0\xc6\xa3\x38\x70\xd5\x86\x32\x66\x49\xad\xe0\x75\xe0\xc2\x0d\x55\x42\x06\xe2\x1e\xc0\xeb\xca\xb9\x7e\x1d\x88\x7b\x74\x1e\xf0\x79\xa8\x01\x24\xc8\xd8\x3a\x52\x60\x57\x2a\x50\xca\x23\x30\xe1\x33\x03\xf5\xf7\xc5\x6d\xde\x19\x16\x56\xa9\x2e\xc6\x36\x38\x77\xb4\x0f\xd6\xe4\xc5\x65\xf6\x88\x42\xb0\xd9\x04\x2c\x63\x55\xf6\xe5\x5c\x40\x84\x42\xc2\x04\xec\xc5\x52\xf2\x83\x54\xfd\x2f\xab\x71\xf2\x03\x30\xcb\xaf\x0d\x28\x36\x3d\x31\xe4\x89\x4c\x59\xa5\xc2\xfa\x5c\x76\xf4\xe7\x53\xe1\x49\xc2\x52\x3a\x09\x55\x84\x9d\xc5\x51\x60\x31\xc3\xba\x7f\x56\x37\x92\x29\x97\x9f\x55\x1e\x80\xd2\x3f\xf3\xe0\x66\x22\x24\x26\x38\x26\xb9\x4b\x68\x40\x75\x1f\xfa\xaa\xb2\x36\xae\xc0\x40\xe2\xaa\x02\xf4\x31\x94\x31\x81\xd5\x54\x9d\xef\x46\x11\x09\x55\x67\x94\x97\x0a\x58\x6c\x30\xd3\xa9\xc0\x53\x81\xf9\xaf\xdc\x46\x47\x5d\xed\x81\x0b\x74\x10\x7d\x31\xac\xae\xb2\x0c\x23\x24\xfc\x12\x10\x3d\x2e\x7a\x5d\xb9\x3e\x05\xf3\x10\xb0\x96\x6a\xef\xec\xf1\xca\x44\x73\xde\x18\x44\x4b\x05\x7a\x9d\x4d\x66\x1f\xc3\xdc\x2b\x2b\x37\x97\x70\xae\xf6\x50\xa7\x58\x07\x0c\xea\x41\x13\x10\x03\xc1\xc0\x5c\x63\x1f\x4c\xac\x93\x59\x62\x83\x47\x1f\xa8\x36\x49\x18\xa2\x3c\x8f\xa1\x09\x22\x6d\xae\x19\x38\x84\xaf\x47\xa0\x4a\xc8\x30\x2e\xfc\x0b\x94\xe1\xcb\xa5\xdf\xa5\x8a\x62\x91\xf7\x06\xbc\x8a\xba\xdb\x24\xa1\x3a\x51\x64\x20\x9a\x91\xd7\x4b\x8d\x85\xfa\xc2\x55\x7e\x49\xfe\x4a\x8b\x8f\x2e\xa1\x3c\x6e\x12\x7a\xc8\xaf\x40\xc4\x69\xb1\xf2\x75\xdd\xe2\x21\x88\xc5\x6e\xa9\x53\x19\x1d\x55\x63\x84\x60\x01\xf1\x52\x5e\x75\x9b\xea\x25\xe3\x84\x29\x8f\xcb\xe0\x9b\xc7\x75\x46\x64\x07\xd2\xc4\xf3\x07\xbf\x56\xb4\x0d\x9e\x42\xae\xaa\xb2\xf3\x42\xca\x39\x85\x6c\xc0\x6c\xfe\x34\x03\x9d\xa9\x34\xfe\x04\xe5\xb4\xf0\x65\x6f\xf0\x4a\x2b\x5f\x07\x62\x40\x9f\x80\xfa\xdc\x81\x7c\x67\x9c\x0e\x88\xcb\xbf\x00\xf1\x93\xd2\x6c\x0a\x0f\x40\xbd\x66\x9d\xef\xae\xf2\x68\xa9\x19\xe8\x1d\xf2\xd5\x54\x6e\x63\xa8\xc0\xa2\xec\xf2\x15\xa8\x92\x01\x97\x0d\x1b\x7c\x55\xad\x0b\xb4\xb4\xd3\x8e\x1c\x48\xd7\x45\x6f\x25\x1c\x92\x8b\x9a\xc6\xd5\x8b\xae\xc7\x1e\x47\xbf\xc7\xc3\xf7\xfe\x28\xc3\x56\xd4\x2e\x12\x1e\x74\x25\xfa\x0e\xfc\x95\x29\x82\x55\xe5\xa4\x3f\xce\xc3\x94\x67\x4a\x12\x6f\xc3\x10\xe2\x11\x5f\x96\x2e\xf6\x21\x16\xde\x65\xf9\x55\x1c\x88\x34\xf0\x30\x0d\x35\x02\xa7\x36\x4c\x63\xf6\x45\x35\x33\x6c\x8f\x9c\x47\xbb\x75\xea\x3c\xe1\x40\x2c\x0a\x20\xbe\x05\x76\xd0\xba\x5a\xfc\x92\x6b\xdd\xa9\x21\x21\x23\xeb\x0a\x99\x5a\xb4\xf9\x2a\x61\xaf\xf7\x09\x27\xb1\x31\xf2\x69\x1c\x94\xd8\x65\x0e\x2d\x3f\x64\x20\x62\x60\xb1\x58\x58\xe0\x9d\x66\x96\x3f\xd0\x5a\xd6\xfa\xab\xe7\xa5\x36\x9a\x9e\x7d\xb5\x60\x28\xc0\x5b\xb9\x1b\xe9\x0a\x8d\xd3\xc5\xae\xd4\x67\x0e\xd3\x22\x7c\xf3\x43\x5f\xc7\xcf\x66\xe7\x93\x1e\xf2\x0d\xcc\x98\x09\x48\x0f\x3c\x25\x59\x02\x71\xf6\xc0\xad\x73\xf4\xf0\x7a\xcd\x19\xec\xb4\x6b\xc9\x2d\x19\x32\xf0\xa9\xff\x1a\x6f\x53\x6b\xd3\x20\xe1\x17\x2b\xef\x5c\x8c\x87\xdc\xf3\xac\x40\xe5\xf9\x16\xed\x07\x9f\x4f\x40\xdc\x34\xc9\x3a\xa0\x74\xb1\x6d\x3f\x6a\x1d\x59\x06\x5d\xfb\x6d\x06\x5e\xa3\x80\x17\x04\x84\x88\x5a\xd9\xff\xf2\xfe\xd6\xef\x5a\x7a\xe0\xcd\x0f\x4b\x5b\x93\xd5\x0f\x83\x79\x8a\xd6\xbb\x39\xcd\x8f\x22\x42\x5d\xa8\xb4\x8b\xc9\x0f\x69\x76\x43\x5f\x89\xba\x38\xd8\x59\x38\xd4\x85\x6f\xdb\x90\x7d\x79\x32\x67\xeb\x2a\x7d\x0a\x83\x0f\x89\xe9\xbd\x5e\x4a\x4b\x3e\x2d\x7d\x6b\x9e\x1a\xdd\xc5\x1e\xbe\xf7\xbc\xd1\xeb\xe5\x9e\x5d\x0d\xc0\xd8\x76\x05\xe5\x38\x5a\xad\xff\x53\xb7\x18\x9a\x6d\x3f\x01\x63\x3c\x38\x5f\x6b\x92\x1c\xc7\xe1\xf5\xf1\x7f\x80\x54\x7c\xf7\x22\x40\xad\x99\x47\xff\x0e\x34\x95\xdb\x6e\xb3\x1c\x5e\x1f\xc3\x56\xeb\xca\x5e\xb3\x93\x95\xc9\x28\xfd\xb6\x22\xbe\x19\xf8\x52\xbb\x2c\x53\x3d\xbb\x4d\x17\xa8\x3f\x17\xf7\xae\xb1\x5e\x3e\xbc\xa1\x1a\xe7\x2a\x70\x48\x35\xa7\x03\x62\x3c\xb7\x69\xf9\x61\x8c\x31\xbe\x01\xc6\x96\x04\xc9\x94\x40\x52\x94\x3d\x35\xa9\x93\xce\x04\x94\x7b\x56\x59\x07\x0a\x16\xad\xe5\x00\x0d\x8f\xc8\x77\x51\x48\x81\x53\x6a\x3b\x22\x0f\x0b\x05\x47\x49\x92\x2d\xf1\xef\x0a\xe4\xdb\x11\x28\x44\x03\x46\x07\x32\xae\x88\x10\xe4\x73\x5c\xf0\x38\x16\x01\xf1\x0b\x30\x0e\x40\x14\xe1\x09\xb1\x1a\x2d\xd4\x8c\xd8\x54\x6e\xc0\x49\xe5\x0e\x58\xc7\x30\x20\xf4\x96\x80\xe1\x93\x34\x11\xdb\x33\xcd\xe4\xc6\x31\x9c\x8c\x52\xef\xb5\xae\x51\x28\x5b\xe8\xd0\x7c\x7c\x02\x22\x29\x7e\x74\x9b\x0e\xd8\xa7\xd9\x26\x99\x6f\xc1\x48\x81\x93\xc3\x37\xe0\x8e\xc5\x42\x79\xd1\xe6\x49\xec\x56\x4a\x2d\xc7\xdd\xb1\x65\x28\x43\xb7\xbd\x58\x1c\x6d\x4b\xee\x1e\x25\x92\x2b\x11\xe1\x25\x52\x37\x1e\x70\x28\xff\xaa\xe4\x49\x73\x9b\xe2\x33\x75\x69\x9b\x14\x2c\xe4\x67\xd4\x60\xce\x48\xac\x11\xd1\x17\x1f\xf4\x20\x1d\x1d\x52\x37\x15\xf5\xa4\x40\x25\x8c\x58\x97\x19\xbe\x49\xd8\x63\xdc\x7e\x5a\x4a\xc0\x40\x7e\x91\xd7\x08\xd3\x50\xc5\x3c\x36\xbd\x8d\x5a\x6b\xb2\xd7\x1d\x16\x98\x84\x45\x5a\xc8\x71\x9d\x00\x4f\x7a\x04\x42\x42\xe7\x1d\x5b\x3f\xc7\x93\xaf\x7c\x41\x06\x24\x34\x95\x4f\xcb\x5d\x26\x95\x3d\x8a\xe9\x8c\xb4\x81\x3c\x6a\xa0\xad\x8b\x60\x92\x91\x48\x83\x51\x44\xbc\xc9\x28\x35\xe1\xb0\x81\xab\x36\xb9\x03\x6d\xdf\xd2\xb9\x8d\x9e\x71\x4d\x6e\x63\xd7\xe3\x69\x21\xcd\x7d\x9e\xa8\xa6\x59\xe8\x7e\xa6\x7b\x4f\x88\x6b\xe0\x1d\xea\x87\xe2\xf1\xf0\xf3\x39\x76\x1f\x60\x87\x15\xbe\x15\x9c\x03\xd4\xf6\x0f\x40\xef\xed\x0b\xd0\x0f\x8e\xf4\x9c\xe7\x0e\x7c\x3a\xc7\x7e\x03\xa4\xf1\x14\x65\x3c\xe7\xa1\x0a\xbc\xa5\xcb\x65\x1e\xbb\x96\xd3\x76\x27\x8d\xf7\xd3\xbc\x07\x09\xdb\xb9\xcd\x1b\xe0\xf5\xe9\xe0\xe8\xaa\xc0\x87\x73\xec\xb7\x40\xcb\x25\xa1\xf2\xed\x9c\xa7\x07\xde\xcf\xb1\x9f\xdd\x05\x5b\xeb\x6e\x03\x73\x3b\xe7\x21\xfa\x0f\xf0\x38\x66\x25\xcc\x70\xb5\x8f\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xb2\x61\x4d\xd1\x6b\x06\x00\x00")

func assetsImagesColored_tilemap_packedPngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesColored_tilemap_packedPng,
		"assets/images/colored_tilemap_packed.png",
	)
}

func assetsImagesColored_tilemap_packedPng() (*asset, error) {
	bytes, err := assetsImagesColored_tilemap_packedPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/colored_tilemap_packed.png", size: 1643, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0001Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\x2a\x29\x2b\x27\x24\x14\x1c\x3a\x74\xb1\xae\xae\xff\xe6\xbd\xf6\xd5\x0c\x0c\x0c\x12\x9e\x2e\x8e\x21\x1c\xd7\x93\x23\xb6\x76\x31\x76\x34\x3c\xf8\x5f\xaf\xb1\x6a\x6d\x2a\x07\x2f\x2b\x43\x0d\x2b\x97\xfb\xfd\x56\xa1\xa7\x0c\x0c\x0c\x0c\x9e\xae\x7e\x2e\xeb\x9c\x12\x9a\x00\x01\x00\x00\xff\xff\x4b\x43\xab\x1c\x79\x00\x00\x00")

func assetsImagesTile_0001PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0001Png,
		"assets/images/tile_0001.png",
	)
}

func assetsImagesTile_0001Png() (*asset, error) {
	bytes, err := assetsImagesTile_0001PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0001.png", size: 121, mode: os.FileMode(493), modTime: time.Unix(1585395344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0004Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\xf6\xd8\xc7\xfe\xdf\x5a\xb0\x2b\x31\x4c\x49\x59\xd9\x8b\x9f\xb3\x9a\x81\x81\x41\xce\xd3\xc5\x31\x84\xe3\x7a\xf2\x8f\xe8\xf3\x0c\x2e\xfa\x9b\x25\xc3\xd6\x26\xdd\xb8\x72\x3c\x60\xeb\xb4\x87\x9f\x2b\x15\x98\x18\xda\x8b\xb8\x7b\xbe\x4b\x9e\xd1\x62\x60\x60\x60\xf0\x74\xf5\x73\x59\xe7\x94\xd0\x04\x08\x00\x00\xff\xff\x6b\xd2\x66\x2a\x7f\x00\x00\x00")

func assetsImagesTile_0004PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0004Png,
		"assets/images/tile_0004.png",
	)
}

func assetsImagesTile_0004Png() (*asset, error) {
	bytes, err := assetsImagesTile_0004PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0004.png", size: 127, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0005Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x16\x66\x06\x06\x06\x33\xc5\xc5\x3b\x18\x18\x18\x58\xd2\x1d\x7d\x1d\x19\x18\x36\xf6\x73\xff\x49\x64\x65\x60\x60\xe0\x0f\xf0\x09\x71\xdd\x95\x18\xd6\x63\x1f\xfb\x7f\x6b\xc1\xa1\x43\x17\x95\x94\x95\xcf\x32\x4d\x6f\x67\x60\x60\x50\xf3\x74\x71\x0c\xe1\xb8\x9e\x5c\x50\x18\x54\x98\xc8\x20\x7c\xce\xe7\x94\x1a\x8f\x5a\xdb\xb1\x73\x3c\x7e\xc7\x0e\x69\xf1\xe8\xf1\x38\x3c\x51\x7a\xc4\xa1\xc8\xd0\x90\xc4\xe6\xf4\xe0\xdf\x9f\x77\x0c\x0c\x0c\x0c\x9e\xae\x7e\x2e\xeb\x9c\x12\x9a\x00\x01\x00\x00\xff\xff\xb6\xcd\xfe\xf3\x8a\x00\x00\x00")

func assetsImagesTile_0005PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0005Png,
		"assets/images/tile_0005.png",
	)
}

func assetsImagesTile_0005Png() (*asset, error) {
	bytes, err := assetsImagesTile_0005PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0005.png", size: 138, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0006Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x16\x66\x06\x06\x06\x33\xc5\xc5\x3b\x18\x18\x18\x58\xd2\x1d\x7d\x1d\x19\x18\x36\xf6\x73\xff\x49\x64\x65\x60\x60\x10\x0a\xf0\x09\x71\xed\xb1\x8f\xb5\x59\x5c\x10\x7b\xaf\x7d\x57\x62\xd8\xff\xad\x05\x4a\xca\xca\xe9\xbf\xbf\x19\x33\x30\x30\xe8\x7a\xba\x38\x86\x70\x5c\x4f\x2e\xe0\x2c\x2c\x4d\x2c\xe0\x2d\xe4\x4d\x2c\x10\x2c\x2c\x49\xe4\x10\x0c\x2a\x49\xe5\x08\x0d\xe2\x4a\xe5\x30\x35\x63\x13\x5a\xc3\xe8\x70\xc8\xc4\x42\x84\x61\xd1\x41\x0e\x9d\x8d\x7b\xe4\x0e\x33\x30\x30\x30\x78\xba\xfa\xb9\xac\x73\x4a\x68\x02\x04\x00\x00\xff\xff\x38\x10\x27\x73\x94\x00\x00\x00")

func assetsImagesTile_0006PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0006Png,
		"assets/images/tile_0006.png",
	)
}

func assetsImagesTile_0006Png() (*asset, error) {
	bytes, err := assetsImagesTile_0006PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0006.png", size: 148, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0007Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\xee\x4a\x0c\xfb\xbf\xb5\xa0\xc7\x3e\x56\x49\x59\xf9\xa1\x51\x6b\x20\x03\x03\x83\xa4\xa7\x8b\x63\x08\xc7\xf5\xe4\x1f\xc9\xe7\x3f\x5c\x9c\xff\x30\xdd\xee\xf0\xd2\x32\x81\x5f\x5b\xe5\x9a\x18\x9a\xcf\x72\x4f\x5c\x21\x6d\x29\xca\xc0\xc0\xc0\xe0\xe9\xea\xe7\xb2\xce\x29\xa1\x09\x10\x00\x00\xff\xff\xaf\xc3\x89\xe7\x7a\x00\x00\x00")

func assetsImagesTile_0007PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0007Png,
		"assets/images/tile_0007.png",
	)
}

func assetsImagesTile_0007Png() (*asset, error) {
	bytes, err := assetsImagesTile_0007PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0007.png", size: 122, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0008Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\x70\x06\xf8\x84\xb8\xd6\xd5\xf5\x1f\x3a\x74\x51\x49\x59\x99\x6b\xce\xb2\x68\x06\x06\x06\x59\x4f\x17\xc7\x10\x8e\xeb\xc9\x11\x33\x8f\x32\xb8\xe8\x3a\xf1\x74\xc9\xf1\xcc\x9c\xc9\xd3\x39\x8f\xe7\x74\x1a\xa3\x20\x43\xe0\x7f\x76\x25\x5d\xbf\xdd\xe2\x0c\x0c\x0c\x0c\x9e\xae\x7e\x2e\xeb\x9c\x12\x9a\x00\x01\x00\x00\xff\xff\xf2\x26\x94\xfb\x7b\x00\x00\x00")

func assetsImagesTile_0008PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0008Png,
		"assets/images/tile_0008.png",
	)
}

func assetsImagesTile_0008Png() (*asset, error) {
	bytes, err := assetsImagesTile_0008PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0008.png", size: 123, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0009Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x16\x66\x06\x06\x06\x33\xc5\xc5\x3b\x18\x18\x18\x58\xd2\x1d\x7d\x1d\x19\x18\x36\xf6\x73\xff\x49\x64\x65\x60\x60\xe0\x0f\xf0\x09\x71\xb5\x59\x5c\x10\x7b\xaf\xbd\xc7\x3e\x76\x57\x62\x98\x92\xb2\xf2\x5f\x31\x6b\x90\x19\xda\x9e\x2e\x8e\x21\x1c\xd7\x93\x0b\x0a\x45\x0a\x13\x19\x84\xfd\xd8\xce\x68\xf1\x9c\x3a\x76\xcc\x8d\x47\xe9\xd8\xb1\x3e\x1e\x25\x2f\xaf\x3e\x1e\xbd\x63\xc7\x1c\x22\x45\xd5\xc5\x19\xaa\x8e\xb1\xd9\x2b\xcf\xe7\xad\x65\x60\x60\x60\xf0\x74\xf5\x73\x59\xe7\x94\xd0\x04\x08\x00\x00\xff\xff\xf7\x2a\xd1\xb0\x8f\x00\x00\x00")

func assetsImagesTile_0009PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0009Png,
		"assets/images/tile_0009.png",
	)
}

func assetsImagesTile_0009Png() (*asset, error) {
	bytes, err := assetsImagesTile_0009PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0009.png", size: 143, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0014Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\xfe\xff\xff\xda\x66\x71\x81\x92\xb2\x72\xec\xbd\xf6\x05\xcf\x27\x4d\x65\x60\x60\x50\xf4\x74\x71\x0c\xe1\xb8\x9e\x3c\xa3\xbe\xfb\xe0\x73\x69\xe7\xbf\x76\x6d\xa1\xf7\x25\xb2\xf2\x8d\xff\x44\x9d\x0d\xf8\x3d\x3d\xf1\x9d\x39\x43\x5b\x3a\xf7\x62\xc3\x3d\xd5\xcb\x18\x18\x18\x18\x3c\x5d\xfd\x5c\xd6\x39\x25\x34\x01\x02\x00\x00\xff\xff\xb1\x8d\x49\x37\x82\x00\x00\x00")

func assetsImagesTile_0014PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0014Png,
		"assets/images/tile_0014.png",
	)
}

func assetsImagesTile_0014Png() (*asset, error) {
	bytes, err := assetsImagesTile_0014PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0014.png", size: 130, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0016Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\xd6\xd5\xf5\xff\xdf\xba\xf5\xd0\xa1\x8b\x4a\xca\xca\x13\x8e\x6d\x79\xcf\xc0\xc0\xa0\xe8\xe9\xe2\x18\xc2\x71\x3d\xf9\x87\xf4\xb9\x0f\x7f\xf5\x0f\xff\xdf\xcf\xf3\xdb\xcf\x70\x4d\xd5\xd1\x82\x17\xa2\xce\xdf\xb4\xda\xfe\x9b\x31\xcc\x5d\xc6\x13\x7b\xa0\xd5\x6b\x2e\x03\x03\x03\x83\xa7\xab\x9f\xcb\x3a\xa7\x84\x26\x40\x00\x00\x00\xff\xff\xb3\x93\xe0\x14\x82\x00\x00\x00")

func assetsImagesTile_0016PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0016Png,
		"assets/images/tile_0016.png",
	)
}

func assetsImagesTile_0016Png() (*asset, error) {
	bytes, err := assetsImagesTile_0016PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0016.png", size: 130, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0024Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\xf0\x04\xf8\x84\xb8\xf6\xd8\xc7\x1e\x3a\x74\x51\x49\x59\x79\x57\x62\x98\xcf\xff\x07\x15\x0c\x0c\x0c\x12\x9e\x2e\x8e\x21\x1c\xd7\x93\x67\x48\x1d\x9b\xb0\x75\x92\x62\xe3\x64\xc5\xff\xea\x12\x6f\x5b\x0c\x18\x92\x5c\x39\x0d\xca\xc5\xfd\x19\x40\xc0\xd3\xd5\xcf\x65\x9d\x53\x42\x13\x20\x00\x00\xff\xff\xf2\xb2\xc9\x89\x79\x00\x00\x00")

func assetsImagesTile_0024PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0024Png,
		"assets/images/tile_0024.png",
	)
}

func assetsImagesTile_0024Png() (*asset, error) {
	bytes, err := assetsImagesTile_0024PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0024.png", size: 121, mode: os.FileMode(493), modTime: time.Unix(1585395346, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0039Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x16\x66\x06\x06\x06\x33\xc5\xc5\x3b\x18\x18\x18\x58\xd2\x1d\x7d\x1d\x19\x18\x36\xf6\x73\xff\x49\x64\x65\x60\x60\xe0\x0f\xf0\x09\x71\xed\xb1\x8f\x55\x52\x56\xae\xab\xeb\xdf\x95\x18\x76\xe8\xd0\x45\x1d\x53\x75\x63\x06\x06\x06\x6d\x4f\x17\xc7\x10\x8e\xeb\xc9\x02\x45\x85\x81\x29\x01\x06\x41\x69\x49\x05\x66\x85\x66\x8d\x02\x5a\x7d\x4a\x7e\x3c\xe7\xda\x0e\xa9\xf1\xf0\x1d\x3b\xa6\xc3\xa3\xa5\xa7\xe7\xc7\x50\x76\x85\x4d\xf6\x63\x24\x63\x2f\x03\x03\x03\x83\xa7\xab\x9f\xcb\x3a\xa7\x84\x26\x40\x00\x00\x00\xff\xff\x1c\x0e\xfb\x0b\x8f\x00\x00\x00")

func assetsImagesTile_0039PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0039Png,
		"assets/images/tile_0039.png",
	)
}

func assetsImagesTile_0039Png() (*asset, error) {
	bytes, err := assetsImagesTile_0039PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0039.png", size: 143, mode: os.FileMode(493), modTime: time.Unix(1585395344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0057Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\x70\x06\xf8\x84\xb8\xfe\x9f\x98\xf6\xff\x49\x85\x92\xb2\x72\x61\xcd\x3f\x36\x06\x06\x06\x45\x4f\x17\xc7\x10\x8e\xeb\xc9\x11\x5b\xbb\x12\xaf\x1a\xb5\x85\x1a\x4b\x86\x2d\x35\xf4\x89\x3c\x3a\x61\x67\xd7\xc2\x62\xd1\xc3\x9b\x42\x19\xca\x15\x39\xcf\x68\x4d\x72\x9a\xc1\xc0\xc0\xc0\xe0\xe9\xea\xe7\xb2\xce\x29\xa1\x09\x10\x00\x00\xff\xff\x80\xf1\x8f\xbd\x7f\x00\x00\x00")

func assetsImagesTile_0057PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0057Png,
		"assets/images/tile_0057.png",
	)
}

func assetsImagesTile_0057Png() (*asset, error) {
	bytes, err := assetsImagesTile_0057PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0057.png", size: 127, mode: os.FileMode(493), modTime: time.Unix(1585395344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsImagesTile_0081Png = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xea\x0c\xf0\x73\xe7\xe5\x92\xe2\x62\x60\x60\xe0\xf5\xf4\x70\x09\x62\x60\x60\xe0\x00\x61\x26\x66\x06\x06\x86\x9d\x89\x61\x12\x0c\x0c\x0c\x2c\xe9\x8e\xbe\x8e\x0c\x0c\x1b\xfb\xb9\xff\x24\xb2\x32\x30\x30\x70\x06\xf8\x84\xb8\xda\x2c\x2e\x88\xbd\xd7\xae\xa4\xac\x1c\x34\x41\xcb\x87\x81\x81\x41\xc1\xd3\xc5\x31\x84\xe3\x7a\x72\x46\xec\x91\x05\x53\x0f\x6e\xb8\x30\x39\xb1\x4b\xc5\xb9\x4b\xc2\x79\x91\x78\xf3\x33\xae\xb6\x75\x0a\x0c\x3e\xf3\xd8\x94\xa3\x5b\x27\x2c\x62\x60\x60\x60\xf0\x74\xf5\x73\x59\xe7\x94\xd0\x04\x08\x00\x00\xff\xff\xd0\x41\x9e\x1a\x7e\x00\x00\x00")

func assetsImagesTile_0081PngBytes() ([]byte, error) {
	return bindataRead(
		_assetsImagesTile_0081Png,
		"assets/images/tile_0081.png",
	)
}

func assetsImagesTile_0081Png() (*asset, error) {
	bytes, err := assetsImagesTile_0081PngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/images/tile_0081.png", size: 126, mode: os.FileMode(493), modTime: time.Unix(1585395344, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMapsTilesetTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x3d\x6e\xc3\x30\x0c\x85\x77\x9f\x82\x78\x7b\x65\xb9\xe8\x90\xc1\x72\xb6\x9e\xa0\x9d\x03\x41\x22\x6c\x21\x16\x25\x58\x72\x7f\x6e\x5f\xa8\x69\x03\x0f\x19\xdf\xe3\x47\x7e\xe0\x78\xfe\x8a\x2b\x7d\xf0\x56\x42\x12\x83\x41\x69\x10\x8b\x4b\x3e\xc8\x6c\xf0\xfe\xf6\xfa\x74\xc2\x79\xea\xc6\x1a\x56\x2e\x5c\x8f\xe4\x33\xa8\xb5\xfe\x58\xa9\x01\x24\x36\xb2\x81\x4b\x6b\xda\xd8\x5f\x1a\x12\x6d\xbe\x64\xeb\xae\xec\x6f\x2b\x9f\xc1\xd7\xc5\xe0\x74\x4b\x0b\x87\x79\xa9\xf7\xe8\xd2\x2e\xd5\x60\xd0\x1a\xe4\xd2\xba\x47\x29\x2d\x61\xea\x68\x0c\xd1\xce\x4c\x25\xed\x9b\x63\x03\xa5\xfa\xdf\xa2\xf4\x8f\x65\x2a\xcb\x0c\xfa\x97\x69\xd0\xdd\xa4\xd1\xb7\x73\x0d\xa7\xe0\x0d\x86\x17\x50\xfd\xce\x6c\x50\xc4\x5e\xb9\x4d\xc7\xfe\xef\xe5\xa9\xfb\x09\x00\x00\xff\xff\xa0\x4d\x55\x4c\x24\x01\x00\x00")

func assetsMapsTilesetTsxBytes() ([]byte, error) {
	return bindataRead(
		_assetsMapsTilesetTsx,
		"assets/maps/tileset.tsx",
	)
}

func assetsMapsTilesetTsx() (*asset, error) {
	bytes, err := assetsMapsTilesetTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/maps/tileset.tsx", size: 292, mode: os.FileMode(420), modTime: time.Unix(1588769020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsMapsWorldTmx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xdb\x53\xea\x3a\x14\xc6\xdf\xf9\x2b\x32\x79\x17\x4a\xe5\xd2\xce\x50\x9c\x20\x17\x2b\x78\xe4\x72\x3c\x2a\x2f\x4e\x48\x17\x6d\xa1\x4d\x4a\x1a\x6d\xf1\xaf\x3f\xd3\x62\xd9\x6e\xd8\xd6\x17\xf7\x5b\xb3\x7e\x5f\x16\xdf\xb7\x98\x95\xce\x55\x1a\x06\xe8\x0d\x64\xec\x0b\x6e\xe1\x7a\x55\xc3\x08\x38\x13\x8e\xcf\x5d\x0b\x3f\xfc\x3b\xbc\x30\xf0\x55\xb7\xd2\x09\x69\xf4\x59\xa5\x63\xa4\xfc\x00\x9c\xcf\xa5\x6a\x1d\x23\x21\x7d\xe0\x8a\xaa\xbc\x26\xa4\xf2\x84\x2b\x38\x0d\x30\x92\xc0\x1d\x90\x42\x3a\x20\x2d\x2c\x7d\xd7\x53\x17\x8e\x48\x38\x46\x89\xef\x28\xcf\xc2\x75\x1d\x23\x0f\xb2\xfa\xe1\x3b\xeb\xfe\x81\x8c\xc3\xa9\xa0\x06\x46\x3e\x5f\xfb\xdc\x57\x60\x61\x0d\x23\x0e\xa9\x0a\xe8\x1e\xa4\xef\x58\xb8\xfe\x51\x10\xab\x0d\x30\x95\x55\x74\xdc\xad\xa0\x4e\xd6\x20\x06\x85\xd6\xbe\x8c\x95\x9b\x2b\x31\xe2\x34\x04\x0b\x33\x11\x08\x09\xce\x4b\x26\x09\x69\xf4\x12\x51\xb6\x05\xe7\x1b\x07\xd9\x91\x89\x57\x9e\xb9\xd5\x34\x8c\x98\x08\x5e\x43\x1e\xe7\x06\xba\x15\x84\x3a\x7e\x48\x5d\x40\xb1\x78\x95\x0c\x2c\x5c\xad\xd6\xf2\x42\x5c\xfb\xf3\xaf\x55\x23\xee\x1e\x47\x61\x68\xbf\x46\x61\x68\xb8\x96\xf7\xcb\xf4\x28\xf3\xad\x61\xa4\xf6\x11\x58\x38\xa1\x41\x70\x0a\xeb\x65\xb0\x51\xc0\x28\x1f\xd7\x4b\xfd\x54\xd0\x3a\x11\xe8\x67\xed\x8f\x2d\x62\x4e\xb7\x70\x86\x8f\x0d\x24\x55\xa7\x50\x3f\xde\x75\x84\x90\xa7\xf4\xd2\x2c\x28\xf3\x20\x3e\xbb\xdc\x6c\x17\x78\x0b\xfb\x53\x68\x1c\x53\xbb\x82\x9e\xa5\x36\x4b\x07\x66\x96\x4e\xcc\xd4\x4b\xe9\x65\x29\x6d\x94\xd2\x66\x29\x6d\x95\xd2\x76\x29\x35\x4a\xa9\x79\x46\x3b\xb5\x8f\xe5\xc8\xbe\xf3\x3f\x3e\x57\xb6\x8b\xfd\xc8\x84\xf1\x57\x7b\x9a\x77\x77\xa8\xa2\x9f\x1e\x8d\x15\x8d\xa1\xd5\xc8\x76\x22\x8c\x24\xc4\x87\xf7\xe1\x3d\xf0\x57\xb9\x1a\xc1\xed\x7e\xb2\x0c\x7b\xae\x7f\x3d\x58\xa4\xc9\x30\x9d\x92\x69\x4a\xc6\x33\x7d\xb4\xdb\x3d\x11\xa6\xb1\xa7\xfb\x5d\x1a\x2e\x4d\x7b\xbe\x66\xee\xae\x01\xcd\xbe\x53\xbf\x5b\x4e\x1f\x6f\x17\xa3\xc9\xb3\x39\xa6\xee\x8e\x39\x23\xd1\xbe\x9f\xa7\x74\x3c\x7f\xb7\xfb\xcd\x81\x19\xac\xb5\x07\x4f\x6f\xac\xed\xb7\x58\x1a\x8b\x2d\x7b\xef\x0f\x97\xed\x46\x3a\x19\x0d\x9d\x99\x00\x36\xeb\xd9\xff\xf5\xf4\xb7\xcc\x69\x2d\xb3\x9a\x67\xce\x83\xfe\x9e\xb8\x55\x24\x0e\x05\x8f\x15\xc8\x9f\x0d\x9d\x6e\x9e\x7b\xee\xd0\x24\x2b\x63\x6e\xcb\xf9\x75\xe2\x2d\x44\x8f\x91\x9b\xa9\x4b\xee\x88\x65\x7d\x6b\xce\x28\xcc\x1d\x76\xf3\x6f\x78\xb3\x93\x51\x42\x36\x83\x76\x9f\x25\x43\x42\x96\x03\x42\xb4\xef\x7d\x99\x85\x2f\xa1\x3c\x90\x3f\xed\x6a\x4c\xfe\xb9\x1e\x4c\x36\x0b\x73\x62\xf3\x60\x44\x6e\x1e\x37\xb3\xfd\xbc\x41\x2e\xef\x5d\x12\x7c\x35\xb5\x4e\x2d\xa4\x51\xb7\xf2\x7f\x00\x00\x00\xff\xff\x08\x07\xf2\x93\xd9\x06\x00\x00")

func assetsMapsWorldTmxBytes() ([]byte, error) {
	return bindataRead(
		_assetsMapsWorldTmx,
		"assets/maps/world.tmx",
	)
}

func assetsMapsWorldTmx() (*asset, error) {
	bytes, err := assetsMapsWorldTmxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/maps/world.tmx", size: 1753, mode: os.FileMode(420), modTime: time.Unix(1588791867, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/assets.go": assetsAssetsGo,
	"assets/images/colored_tilemap.png": assetsImagesColored_tilemapPng,
	"assets/images/colored_tilemap_packed.png": assetsImagesColored_tilemap_packedPng,
	"assets/images/tile_0001.png": assetsImagesTile_0001Png,
	"assets/images/tile_0004.png": assetsImagesTile_0004Png,
	"assets/images/tile_0005.png": assetsImagesTile_0005Png,
	"assets/images/tile_0006.png": assetsImagesTile_0006Png,
	"assets/images/tile_0007.png": assetsImagesTile_0007Png,
	"assets/images/tile_0008.png": assetsImagesTile_0008Png,
	"assets/images/tile_0009.png": assetsImagesTile_0009Png,
	"assets/images/tile_0014.png": assetsImagesTile_0014Png,
	"assets/images/tile_0016.png": assetsImagesTile_0016Png,
	"assets/images/tile_0024.png": assetsImagesTile_0024Png,
	"assets/images/tile_0039.png": assetsImagesTile_0039Png,
	"assets/images/tile_0057.png": assetsImagesTile_0057Png,
	"assets/images/tile_0081.png": assetsImagesTile_0081Png,
	"assets/maps/tileset.tsx": assetsMapsTilesetTsx,
	"assets/maps/world.tmx": assetsMapsWorldTmx,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"assets.go": &bintree{assetsAssetsGo, map[string]*bintree{}},
		"images": &bintree{nil, map[string]*bintree{
			"colored_tilemap.png": &bintree{assetsImagesColored_tilemapPng, map[string]*bintree{}},
			"colored_tilemap_packed.png": &bintree{assetsImagesColored_tilemap_packedPng, map[string]*bintree{}},
			"tile_0001.png": &bintree{assetsImagesTile_0001Png, map[string]*bintree{}},
			"tile_0004.png": &bintree{assetsImagesTile_0004Png, map[string]*bintree{}},
			"tile_0005.png": &bintree{assetsImagesTile_0005Png, map[string]*bintree{}},
			"tile_0006.png": &bintree{assetsImagesTile_0006Png, map[string]*bintree{}},
			"tile_0007.png": &bintree{assetsImagesTile_0007Png, map[string]*bintree{}},
			"tile_0008.png": &bintree{assetsImagesTile_0008Png, map[string]*bintree{}},
			"tile_0009.png": &bintree{assetsImagesTile_0009Png, map[string]*bintree{}},
			"tile_0014.png": &bintree{assetsImagesTile_0014Png, map[string]*bintree{}},
			"tile_0016.png": &bintree{assetsImagesTile_0016Png, map[string]*bintree{}},
			"tile_0024.png": &bintree{assetsImagesTile_0024Png, map[string]*bintree{}},
			"tile_0039.png": &bintree{assetsImagesTile_0039Png, map[string]*bintree{}},
			"tile_0057.png": &bintree{assetsImagesTile_0057Png, map[string]*bintree{}},
			"tile_0081.png": &bintree{assetsImagesTile_0081Png, map[string]*bintree{}},
		}},
		"maps": &bintree{nil, map[string]*bintree{
			"tileset.tsx": &bintree{assetsMapsTilesetTsx, map[string]*bintree{}},
			"world.tmx": &bintree{assetsMapsWorldTmx, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

